plugins {
    id "com.android.library"
}

version '1.0'

def withWebRTCUI = getRootProjectProperty('withWebRTCUI', false)

rootProject.allprojects {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
    }
}

android {
    compileSdkVersion 35
    namespace 'org.infobip.plugins.mobilemessaging.flutter.infobip_mobilemessaging'

    defaultConfig {
        minSdkVersion 21
    }

    buildTypes {
        release {
            // Applying ProGuard rules for application classes that will be serialized/deserialized over Gson
            consumerProguardFiles 'infobip-mm-proguard-rules.pro'
        }
    }
}

dependencies {
    def mmVersion = '13.22.0'
    //flutter and mm dependencies clash
    implementation ("org.jetbrains.kotlin:kotlin-stdlib-jdk8") {
        version {
            strictly "1.8.10"
        }
    }
    implementation ("com.infobip:infobip-mobile-messaging-android-sdk:$mmVersion@aar") {
        transitive = true
    }
    implementation "com.infobip:infobip-mobile-messaging-android-resources:$mmVersion@aar"
    implementation "com.infobip:infobip-mobile-messaging-android-chat-sdk:$mmVersion@aar"
    implementation "com.infobip:infobip-mobile-messaging-android-inbox-sdk:$mmVersion@aar"
    if (withWebRTCUI.toBoolean()) {
        implementation implementation("com.infobip:infobip-rtc-ui:$mmVersion") {
            transitive = true
        }
    }
    implementation 'androidx.core:core:1.10.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.databinding:viewbinding:8.0.2'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.android.material:material:1.9.0'

}

def getRootProjectProperty(property, fallback) {
    rootProject.ext.has(property) ? rootProject.ext.get(property) : fallback
}