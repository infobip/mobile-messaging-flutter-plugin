plugins {
    id "com.android.library"
}

version '1.0'

def withWebRTCUI = getRootProjectProperty('withWebRTCUI', false)

rootProject.allprojects {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
    }
}

ext {
    mm_version = "14.6.2"
    mm_minSdkVersion = 23
    mm_compileSdkVersion = 36
    mm_kotlinVersion = "2.1.21"
    mm_gradlePluginVersion = "8.11.1"
    mm_coreKtxVersion = "1.17.0"
    mm_exifinterfaceVersion = "1.3.6"
    mm_viewbindingVersion = "8.0.2"
    mm_gsonVersion = "2.13.1"
    mm_materialVersion = "1.12.0"
    mm_multidexVersion = "2.0.1"
}

android {
    compileSdkVersion mm_compileSdkVersion
    namespace 'org.infobip.plugins.mobilemessaging.flutter.infobip_mobilemessaging'

    defaultConfig {
        minSdkVersion mm_minSdkVersion
    }

    buildTypes {
        release {
            // Applying ProGuard rules for application classes that will be serialized/deserialized over Gson
            consumerProguardFiles 'infobip-mm-proguard-rules.pro'
        }
    }
}

dependencies {
    implementation("com.infobip:infobip-mobile-messaging-android-sdk:$mm_version@aar") {
        transitive = true
    }
    implementation "com.infobip:infobip-mobile-messaging-android-resources:$mm_version@aar"
    implementation "com.infobip:infobip-mobile-messaging-android-chat-sdk:$mm_version@aar"
    implementation "com.infobip:infobip-mobile-messaging-android-inbox-sdk:$mm_version@aar"
    if (withWebRTCUI.toBoolean()) {
        implementation implementation("com.infobip:infobip-rtc-ui:$mm_version") {
            transitive = true
        }
    }
    implementation "androidx.core:core:$mm_coreKtxVersion"
    implementation "androidx.exifinterface:exifinterface:$mm_exifinterfaceVersion"
    implementation "androidx.databinding:viewbinding:$mm_viewbindingVersion"
    implementation "com.google.code.gson:gson:$mm_gsonVersion"
    implementation "com.google.android.material:material:$mm_materialVersion"

}

def getRootProjectProperty(property, fallback) {
    rootProject.ext.has(property) ? rootProject.ext.get(property) : fallback
}